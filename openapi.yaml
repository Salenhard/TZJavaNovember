openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/users/{id}:
    get:
      tags:
      - user-controller
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDto"
    put:
      tags:
      - user-controller
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - user-controller
      operationId: delete
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/tasks/{taskId}/comments/{id}:
    get:
      tags:
      - comment-controller
      operationId: get_1
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDto"
    put:
      tags:
      - comment-controller
      operationId: update_1
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDto"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CommentDto"
    delete:
      tags:
      - comment-controller
      operationId: delete_1
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/tasks/{id}:
    get:
      tags:
      - task-controller
      operationId: get_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TaskDto"
    put:
      tags:
      - task-controller
      operationId: update_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskDto"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - task-controller
      operationId: delete_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/users:
    get:
      tags:
      - user-controller
      operationId: getAll
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageUserDto"
    post:
      tags:
      - user-controller
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserDto"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/tasks:
    get:
      tags:
      - task-controller
      operationId: getAll_1
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: title
        in: query
        required: false
        schema:
          type: string
      - name: priority
        in: query
        required: false
        schema:
          type: string
      - name: status
        in: query
        required: false
        schema:
          type: string
      - name: author
        in: query
        required: false
        schema:
          type: string
      - name: executor
        in: query
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageTaskDto"
    post:
      tags:
      - task-controller
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskDto"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/tasks/{taskId}/comments:
    get:
      tags:
      - comment-controller
      operationId: getAll_2
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: author
        in: query
        required: false
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageCommentDto"
    post:
      tags:
      - comment-controller
      operationId: save_2
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentDto"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                oneOf:
                - type: string
                - type: object
                  additionalProperties:
                    type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    UserDto:
      required:
      - email
      - password
      - roles
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          maxLength: 2147483647
          minLength: 8
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
    CommentDto:
      required:
      - value
      type: object
      properties:
        id:
          type: integer
          format: int64
        value:
          type: string
        author:
          type: string
    TaskDto:
      required:
      - description
      - executorId
      - priority
      - status
      - title
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        status:
          type: string
        priority:
          type: string
        author:
          type: string
        executor:
          type: string
        executorId:
          type: integer
          format: int64
          writeOnly: true
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - USER
            - ADMIN
        active:
          type: boolean
    PageUserDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: "#/components/schemas/PageableObject"
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/UserDto"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        paged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        direction:
          type: string
        nullHandling:
          type: string
        ascending:
          type: boolean
        property:
          type: string
        ignoreCase:
          type: boolean
    PageTaskDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: "#/components/schemas/PageableObject"
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/TaskDto"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageCommentDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: "#/components/schemas/PageableObject"
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/CommentDto"
        number:
          type: integer
          format: int32
        sort:
          type: array
          items:
            $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
